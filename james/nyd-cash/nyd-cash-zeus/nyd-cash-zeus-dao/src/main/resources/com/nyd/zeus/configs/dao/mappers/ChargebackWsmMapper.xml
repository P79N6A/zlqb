<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nyd.zeus.dao.mapper.ChargebackWsmMapper">
    <resultMap id="BaseResultMap" type="com.nyd.zeus.entity.ChargeBackWsm">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="serial_no" jdbcType="BIGINT" property="serialNo" />
        <result column="merchant" jdbcType="VARCHAR" property="merchant" />
        <result column="identifier" jdbcType="VARCHAR" property="identifier" />
        <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="amount" jdbcType="DECIMAL" property="amount" />
        <result column="merchant_order_no" jdbcType="VARCHAR" property="merchantOrderNo" />
        <result column="contract_start_time" jdbcType="DATE" property="contractStartTime" />
        <result column="contract_end_time" jdbcType="DATE" property="contractEndTime" />
        <result column="reconciliation_day" jdbcType="DATE" property="reconciliationDay" />
        <result column="borrow_days" jdbcType="INTEGER" property="borrowDays" />
        <result column="period_count" jdbcType="INTEGER" property="periodCount" />
        <result column="service_rate" jdbcType="DECIMAL" property="serviceRate" />
        <result column="service_cost" jdbcType="DECIMAL" property="serviceCost" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>

    <insert id="insertBatchList" parameterType="java.util.Map">
        insert into ${tablename} (serial_no,merchant,
        identifier,order_no,user_name,
        amount,merchant_order_no,contract_start_time,
        contract_end_time,reconciliation_day,borrow_days,
        period_count,service_rate,service_cost,update_by)
        values
        <foreach collection="values" item="item" index="index" separator=",">
        (#{item.serialNo,jdbcType=BIGINT}, #{item.merchant,jdbcType=VARCHAR},
        #{item.identifier,jdbcType=VARCHAR}, #{item.orderNo,jdbcType=VARCHAR}, #{item.userName,jdbcType=VARCHAR},
        #{item.amount,jdbcType=DECIMAL}, #{item.merchantOrderNo,jdbcType=VARCHAR}, #{item.contractStartTime,jdbcType=DATE},
        #{item.contractEndTime,jdbcType=DATE}, #{item.reconciliationDay,jdbcType=DATE}, #{item.borrowDays,jdbcType=INTEGER},
        #{item.periodCount,jdbcType=INTEGER}, #{item.serviceRate,jdbcType=DECIMAL}, #{item.serviceCost,jdbcType=DECIMAL},
        #{item.updateBy,jdbcType=VARCHAR}
        )
        </foreach>
    </insert>
    <update id="dropTable" parameterType="java.lang.String">
        DROP TABLE IF EXISTS ${_parameter}
    </update>
    <update id="createTable" parameterType="java.lang.String">
        CREATE TABLE ${_parameter}(
  id bigint(20) NOT NULL AUTO_INCREMENT,
  serial_no bigint(20) DEFAULT NULL COMMENT '序号',
  merchant varchar(50) DEFAULT NULL COMMENT '商户',
  identifier varchar(50) DEFAULT NULL COMMENT '编号',
  order_no varchar(50) DEFAULT NULL COMMENT '订单编号',
  user_name varchar(10) DEFAULT NULL COMMENT '姓名',
  amount decimal(10,2) DEFAULT NULL COMMENT '申请金额',
  merchant_order_no varchar(50) DEFAULT NULL COMMENT '商户订单号',
  contract_start_time date DEFAULT NULL COMMENT '合同起始日',
  contract_end_time date DEFAULT NULL COMMENT '合同截止日',
  reconciliation_day date DEFAULT NULL COMMENT '对账日',
  borrow_days int(10) DEFAULT NULL COMMENT '借款天数',
  period_count int(5) DEFAULT NULL COMMENT '借款期数',
  service_rate decimal(5,2) DEFAULT NULL COMMENT '服务利率',
  service_cost decimal(10,2) DEFAULT NULL COMMENT '服务费',
  create_time datetime DEFAULT CURRENT_TIMESTAMP,
  update_by varchar(36) DEFAULT NULL,
  update_time datetime DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (id)
)
    </update>

</mapper>
