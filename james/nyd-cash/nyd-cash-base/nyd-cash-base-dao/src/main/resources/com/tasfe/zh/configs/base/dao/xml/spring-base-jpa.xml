<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">

    <context:annotation-config/>
    <!-- 默认扫描的包路径 -->
    <context:component-scan base-package="com.tasfe.zh.base.dao"/>
    <!-- ASPECTJ注解 proxy-target-class="true" -->
    <aop:aspectj-autoproxy/>

    <!-- 数据库连接池 -->
    <!--<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:com/tasfe/sis/configs/base/dao/propertjdbc.propertiesties"/>
    </bean>-->

    <!-- 数据源 druid -->
    <!--<bean id="jpaDataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${jdbc.mysql.driver}"/>
        <property name="url" value="${jdbc.mysql.url}"/>
        <property name="username" value="${jdbc.mysql.username}"/>
        <property name="password" value="${jdbc.mysql.password}"/>

        &lt;!&ndash; 超时时间；单位为秒。180秒=3分钟 &ndash;&gt;
        <property name="removeAbandonedTimeout" value="${jdbc.pool.removeAbandonedTimeout}"/>
        <property name="maxActive" value="${jdbc.pool.maxPoolSize}"/>
        &lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;
        <property name="maxWait" value="${jdbc.pool.maxWait}"/>
        &lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.pool.timeBetweenEvictionRunsMillis}"/>
        &lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;
        <property name="minEvictableIdleTimeMillis" value="${jdbc.pool.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${jdbc.pool.validationQuery} "/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="false"/>
        <property name="testOnReturn" value="false"/>
        &lt;!&ndash; 超过时间限制是否回收 &ndash;&gt;
        <property name="removeAbandoned" value="true"/>
    </bean>-->

    <bean id="jpaDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.mysql.driver}"/>
        <property name="jdbcUrl" value="${jdbc.mysql.url}"/>
        <property name="user" value="${jdbc.mysql.username}"/>
        <property name="password" value="${jdbc.mysql.password}"/>
        <property name="initialPoolSize" value="${jdbc.mysql.initPoolSize}"/>
        <property name="maxPoolSize" value="${jdbc.mysql.maxPoolSize}"/>
        <property name="autoCommitOnClose" value="true"/>
    </bean>

    <!-- jpa Entity Factory 配置 -->
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="jpaDataSource"/>
        <property name="packagesToScan" value="com.tasfe.zh.base.entity"/>
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>
        <!-- 配置 JPA 的基本属性. 例如 JPA 实现产品的属性 -->
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5Dialect</prop>
                <!--生产环境关闭show sql，format sql-->
                <prop key="hibernate.show_sql">true</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
                <prop key="cache.use_second_level_cache">true</prop>
                <prop key="hibernate.cache.region.factory_class">org.hibernate.cache.SingletonEhCacheRegionFactory
                </prop>
                <prop key="cache.use_query_cache">true</prop>
                <prop key="connection.isolation">2</prop>
                <prop key="use_identifier_rollback">true</prop>
                <prop key="hibernate.c3p0.max_size">20</prop>
                <prop key="hibernate.c3p0.min_size">1</prop>
                <prop key="c3p0.acquire_increment">2</prop>
                <!--多长时间检测一次池内的所有链接对象是否超时-->
                <prop key="c3p0.idle_test_period">2000</prop>
                <prop key="c3p0.timeout">2000</prop>
                <!--缓存 Statement 对象的数量-->
                <prop key="c3p0.max_statements">10</prop>
                <!-- 设定 JDBC 的 Statement 读取数据的时候每次从数据库中取出的记录条数 MySql不支持-->
                <prop key="hibernate.jdbc.fetch_size">100</prop>
                <!-- 设定对数据库进行批量删除，批量更新和批量插入的时候的批次大小 MySql不支持-->
                <prop key="jdbc.batch_size">30</prop>
            </props>
        </property>
        <property name="jpaDialect">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect"/>
        </property>
    </bean>

    <!-- 配置 JPA 使用的事务管理器 -->
    <bean id="jpaTransactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
    </bean>

    <!-- 配置支持基于注解式事务配置 -->
    <tx:annotation-driven transaction-manager="jpaTransactionManager"/>


    <!-- 配置事务的传播特性 -->
    <!--  <bean id="transactionInterceptor" class="org.springframework.transaction.interceptor.TransactionInterceptor">
          <property name="transactionManager" ref="transactionManager"/>
          <property name="transactionAttributes">
              <props>
                  <prop key="add*">PROPAGATION_REQUIRED,-Exception</prop>
                  <prop key="del*">PROPAGATION_REQUIRED,-Exception</prop>
                  <prop key="upd*">PROPAGATION_REQUIRED,-Exception</prop>
                  <prop key="get*">PROPAGATION_NEVER,readOnly</prop>
                  <prop key="query*">PROPAGATION_NEVER,readOnly</prop>
                  <prop key="*">PROPAGATION_NEVER,readOnly</prop>
              </props>
          </property>
      </bean>
      <bean class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
          <property name="proxyTargetClass" value="true"/>
          <property name="beanNames">
              <list>
                  <value>*Service</value>
              </list>
          </property>
          <property name="interceptorNames">
              <list>
                  <value>transactionInterceptor</value>
              </list>
          </property>
      </bean>-->

</beans>