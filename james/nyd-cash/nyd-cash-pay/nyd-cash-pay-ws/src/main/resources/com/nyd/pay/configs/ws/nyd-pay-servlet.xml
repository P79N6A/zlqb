<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd ">

    <!--注册annotation -->
    <context:annotation-config/>
    <!-- 自动扫描controller -->
    <context:component-scan base-package="com.creativearts.nyd.web.controller" name-generator="com.tasfe.framework.netty.spring.FullPackageBeanNameGenerator">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
    </context:component-scan>
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/pay/ali/wapPay"></mvc:mapping>
            <mvc:mapping path="/pay/ali/appPay"/>
            <bean class="com.creativearts.nyd.web.interceptors.AliPayApiInterceptor"></bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/pay/weixinpay/*"></mvc:mapping>

            <bean class="com.creativearts.nyd.web.interceptors.WeixinpayApiInterceptor"></bean>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/pay/wxOauth/*"></mvc:mapping>

            <bean class="com.creativearts.nyd.web.interceptors.WeixinOuthInterceptor"></bean>
        </mvc:interceptor>
    </mvc:interceptors>
    <!-- mvc auto annotation driver -->
    <mvc:annotation-driven>
        <!--异步支持-->
        <mvc:async-support default-timeout="10" task-executor="asyncTaskExecutor">
            <mvc:callable-interceptors>
                <bean class="com.tasfe.framework.netty.servlet.async.AsyncInterceptor"/>
            </mvc:callable-interceptors>
        </mvc:async-support>
        <!--Configures one or more HttpMessageConverter types to use for converting @RequestBody method parameters and
            @ResponseBody method return values. Using this configuration element is optional.
            HttpMessageConverter registrations provided here will take precedence over HttpMessageConverter types registered
            by default. Also see the register-defaults attribute if you want to turn off default registrations entirely-->
        <mvc:message-converters register-defaults="true">
            <ref bean="fastJsonHttpMessageConverter"/>
        </mvc:message-converters>
    </mvc:annotation-driven>
    <!--异步executor-->
    <bean id="asyncTaskExecutor" class="com.tasfe.framework.netty.servlet.async.ThreadLocalAsyncExecutor"/>
    <!--转换器-->
    <!-- <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
         <property name="converters">
             <set>

             </set>
         </property>
     </bean>-->

    <!-- freemarker的配置 -->
    <!--<bean id="freemarkerConfigurer"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="classpath:/templates/"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">10</prop>
                <prop key="locale">zh_CN</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="date_format">yyyy-MM-dd</prop>
                <prop key="number_format">#.##</prop>
            </props>
        </property>
    </bean>-->
    <!-- FreeMarker视图解析 ,在这里配置后缀名ftl和视图解析器 -->
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="viewClass"
                  value="org.springframework.web.servlet.view.freemarker.FreeMarkerView"/>
        <property name="suffix" value=".ftl"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="exposeRequestAttributes" value="true"/>
        <property name="exposeSessionAttributes" value="true"/>
        <property name="exposeSpringMacroHelpers" value="true"/>
    </bean>

    <!--国际化-->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="i18n/messages"/>
    </bean>

    <!-- 处理特殊映射包括增加contextPath -->
    <bean name='requestMappingHandlerMapping' class='com.tasfe.framework.netty.spring.PackageURLRequestMappingHandlerMapping'>
        <property name='docBase' value='com.mobanker.democenter.controller'/>
        <property name="contextPath" value="/demo/api"/>
    </bean>

    <!-- 文件上传 -->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="utf-8"/>
        <property name="maxUploadSize" value="10485760000"/>
        <property name="maxInMemorySize" value="40960"/>
        <property name="uploadTempDir" value="file:///var/statics"/>
    </bean>

    <!--jsonConverter for httpMessageConverter-->
    <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>




    <!--<bean id="jsonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>application/json;charset=UTF-8</value>
            </list>
        </property>
    </bean>-->

    <!--<mvc:resources location="/" mapping="/*.txt"/>
    <mvc:resources mapping="/images/**" location="/,classpath:/statics/images/"/>
    <mvc:resources mapping="/js/**" location="/,classpath:/statics/js/" />
    <mvc:resources mapping="/css/**" location="/,classpath:/statics/css/" />-->
    <!--	 启动Spring MVC的注解功能，完成请求和注解POJO的映射 请求映射
        <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />-->


    <!-- 多视图协商配置bean -->
    <!-- <bean id="contentNegotiationManager"
        class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean">
        扩展名至mimeType的映射,即 /*.json => application/json
        <property name="favorPathExtension" value="true" />
        <property name="favorParameter" value="true" />
        <property name="parameterName" value="format" />
        <property name="ignoreAcceptHeader" value="false" />
        <property name="mediaTypes">
            <value>
                html=text/html
                json=application/json
            </value>
        </property>
        <property name="defaultContentType" value="text/html" />
    </bean> -->
    <!-- 多视图协商解析器 -->
    <!-- <bean
        class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1"/>
        <property name="contentNegotiationManager" ref="contentNegotiationManager" />
        <property name="viewResolvers">
            <list>
                <ref bean="defaultViewResolver" />
                <bean class="org.springframework.web.servlet.view.BeanNameViewResolver" />
            </list>
        </property>
        <property name="defaultViews">
            <list>
                <bean class="com.alibaba.fastjson.support.springs.FastJsonJsonView">
                    <property name="charset" value="UTF-8" />
                </bean>
            </list>
        </property>
    </bean> -->

    <!-- <bean id="defaultViewResolver"
        class="org.springframework.web.servlet.view.UrlBasedViewResolver">
        <property name="viewClass"
            value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="classpath:/resources/views/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean> -->
    <mvc:interceptors>
	    <mvc:interceptor>
		    <mvc:mapping path="/**"/>
		    <bean class="com.creativearts.fx.agent.spring.SqlInjectionInterceptor"/>
	   </mvc:interceptor>
    </mvc:interceptors>

</beans>