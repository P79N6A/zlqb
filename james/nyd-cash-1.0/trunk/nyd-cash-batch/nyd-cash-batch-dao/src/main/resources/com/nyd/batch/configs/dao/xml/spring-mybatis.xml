<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/aop  
                        http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

    <context:annotation-config/>
    <!-- 默认扫描的包路径 -->
    <context:component-scan base-package="com.tasfe.framework.crud,com.nyd.batch.dao"/>

    <!-- ASPECTJ注解 proxy-target-class="true" -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- 数据源 -->
    <bean id="memberDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${mysql.driver}"/>
        <property name="url" value="${member.mysql.url}"/>
        <property name="username" value="${member.mysql.username}"/>
        <property name="password" value="${member.mysql.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}"></property>
        <property name="validationQuery" value="SELECT 1" />
        <property name="testOnBorrow" value="true"/>
    </bean>

    <!-- 数据源 -->
    <bean id="zeusDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${mysql.driver}"/>
        <property name="url" value="${zeus.mysql.url}"/>
        <property name="username" value="${zeus.mysql.username}"/>
        <property name="password" value="${zeus.mysql.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}"></property>
        <property name="validationQuery" value="SELECT 1" />
        <property name="testOnBorrow" value="true"/>
    </bean>

    <!--&lt;!&ndash; 数据源 &ndash;&gt;-->
    <!--<bean id="warehouseDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">-->
        <!--<property name="driverClassName" value="${mysql.driver}"/>-->
        <!--<property name="url" value="${warehouse.mysql.url}"/>-->
        <!--<property name="username" value="${warehouse.mysql.username}"/>-->
        <!--<property name="password" value="${warehouse.mysql.password}"/>-->
        <!--&lt;!&ndash; 初始化连接大小 &ndash;&gt;-->
        <!--<property name="initialSize" value="${initialSize}"></property>-->
        <!--&lt;!&ndash; 连接池最大数量 &ndash;&gt;-->
        <!--<property name="maxActive" value="${maxActive}"></property>-->
        <!--&lt;!&ndash; 连接池最大空闲 &ndash;&gt;-->
        <!--<property name="maxIdle" value="${maxIdle}"></property>-->
        <!--&lt;!&ndash; 连接池最小空闲 &ndash;&gt;-->
        <!--<property name="minIdle" value="${minIdle}"></property>-->
        <!--&lt;!&ndash; 获取连接最大等待时间 &ndash;&gt;-->
        <!--<property name="maxWait" value="${maxWait}"></property>-->
        <!--<property name="validationQuery" value="SELECT 1" />-->
        <!--<property name="testOnBorrow" value="true"/>-->
    <!--</bean>-->

    <bean id="dataSource" class="com.nyd.batch.dao.ds.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="zeusDataSource" value-ref="zeusDataSource"/>
                <!--<entry key="financeDataSource" value-ref="financeDataSource"/>-->
                <entry key="memberDataSource" value-ref="memberDataSource"/>
                <!--<entry key="warehouseDataSource" value-ref="warehouseDataSource"/>-->
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="zeusDataSource"/>
    </bean>


    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 扫描mybatis配置文件 -->
        <property name="configLocation" value="classpath:com/nyd/batch/configs/dao/xml/mybatis/mybatis-config.xml"/>
        <!-- 自动扫描mapping.xml文件,这里可增加自定的mapper.xml文件 -->
        <property name="mapperLocations">
            <array>
                <value>com/nyd/batch/configs/dao/xml/mybatis/mapper/BillMapper.xml</value>
                <value>com/nyd/batch/configs/dao/xml/mybatis/mapper/MemberFeeReportMapper.xml</value>
                <value>com/nyd/batch/configs/dao/xml/mybatis/mapper/RemitReportMapper.xml</value>
                <value>com/nyd/batch/configs/dao/xml/mybatis/mapper/RepayReportMapper.xml</value>
                <value>com/nyd/batch/configs/dao/xml/mybatis/mapper/TRemitMapper.xml</value>
                <value>com/nyd/batch/configs/dao/xml/mybatis/mapper/TRepayMapper.xml</value>
                <value>com/nyd/batch/configs/dao/xml/mybatis/mapper/TMemberLogMapper.xml</value>
                <value>com/nyd/batch/configs/dao/xml/mybatis/mapper/TMemberMapper.xml</value>
                <value>com/nyd/batch/configs/dao/xml/mybatis/mapper/TMemberConfigMapper.xml</value>
                <value>com/nyd/batch/configs/dao/xml/mybatis/mapper/CuiShouMapper.xml</value>
                <value>com/nyd/batch/configs/dao/xml/mybatis/mapper/FriendCircleMapper.xml</value>
            </array>
        </property>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.tasfe.framework.crud.dao,com.nyd.batch.dao.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

</beans>