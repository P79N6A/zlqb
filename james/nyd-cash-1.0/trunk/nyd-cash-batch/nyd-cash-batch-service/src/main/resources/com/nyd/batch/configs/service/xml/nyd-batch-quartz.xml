<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd ">

    <context:component-scan base-package="com.nyd.batch.service.quartz"/>


    <!--     ****************************************配置跑批**************************************-->
    <!-- 线程执行器配置，用于任务注册 -->
    <bean id="withholdTest" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <property name="corePoolSize" value="10" />
        <property name="maxPoolSize" value="100" />
        <property name="queueCapacity" value="500" />
    </bean>

    <bean id="withholdDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="withholdTask"/>
        <property name="targetMethod" value="run"/>
        <property name="concurrent" value="false"/>
        <!-- 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 -->
    </bean>


    <!--  调度触发器 -->
    <bean id="withholdTrigger"
          class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">

        <property name="jobDetail" ref="withholdDetail"/>

        <property name="cronExpression">
            <value>0 */30 * * * ?</value>
            <!--<value>0 0 10 * * ?</value>-->
            <!-- <value>0/120 * * * * ?</value>-->
        </property>
    </bean>

    <!-- 调度工厂 -->
    <bean id="withholdScheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="withholdTrigger"/>
                <!-- <ref bean="buckleTaskTrigger1"/>
                 <ref bean="buckleTaskTrigger2"/>
                 <ref bean="buckleTaskTrigger3"/>
                 <ref bean="buckleTaskTrigger4"/>
                 <ref bean="buckleTaskTrigger5"/>
                 <ref bean="kzjrTaskTrigger"/>
                 <ref bean="financeReportTaskTrigger"/>
                 <ref bean="sendSmsTaskTrigger"/>
                 <ref bean="sendExcelTaskTrigger"/>
                 <ref bean="cuimiTaskTrigger"/>
                 <ref bean="updateRemitFailOrderTrigger"/>-->
            </list>
        </property>
    </bean>


    <!--&lt;!&ndash;     ****************************************配置跑批**************************************&ndash;&gt;-->
    <!--&lt;!&ndash; 线程执行器配置，用于任务注册 &ndash;&gt;-->
    <!--<bean id="executorTest" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">-->
        <!--<property name="corePoolSize" value="10" />-->
        <!--<property name="maxPoolSize" value="100" />-->
        <!--<property name="queueCapacity" value="500" />-->
    <!--</bean>-->

    <!--<bean id="testJobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
        <!--<property name="targetObject" ref="billTask"/>-->
        <!--<property name="targetMethod" value="run"/>-->
        <!--<property name="concurrent" value="false"/>-->
        <!--&lt;!&ndash; 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 &ndash;&gt;-->
    <!--</bean>-->


    <!--&lt;!&ndash;  调度触发器 &ndash;&gt;-->
    <!--<bean id="myTrigger"-->
          <!--class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->

        <!--<property name="jobDetail" ref="testJobDetail"/>-->

        <!--<property name="cronExpression">-->
            <!--<value>*/5 * * * * ?</value>-->
           <!--&lt;!&ndash; <value>0/120 * * * * ?</value>&ndash;&gt;-->
        <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash; 调度工厂 &ndash;&gt;-->
    <!--<bean id="scheduler" class="org.springframework.scheduling.quartz.SchedulerFactoryBean">-->
        <!--<property name="triggers">-->
            <!--<list>-->
                <!--<ref bean="myTrigger"/>-->
               <!--&lt;!&ndash; <ref bean="buckleTaskTrigger1"/>-->
                <!--<ref bean="buckleTaskTrigger2"/>-->
                <!--<ref bean="buckleTaskTrigger3"/>-->
                <!--<ref bean="buckleTaskTrigger4"/>-->
                <!--<ref bean="buckleTaskTrigger5"/>-->
                <!--<ref bean="kzjrTaskTrigger"/>-->
                <!--<ref bean="financeReportTaskTrigger"/>-->
                <!--<ref bean="sendSmsTaskTrigger"/>-->
                <!--<ref bean="sendExcelTaskTrigger"/>-->
                <!--<ref bean="cuimiTaskTrigger"/>-->
                <!--<ref bean="updateRemitFailOrderTrigger"/>&ndash;&gt;-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->


    <!--&lt;!&ndash;     ****************************************配置强扣跑批时间戳**************************************&ndash;&gt;-->


    <!--<bean id="buckleTaskDetail1" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
        <!--<property name="targetObject" ref="buckleTask"/>-->
        <!--<property name="targetMethod" value="run"/>-->
        <!--<property name="concurrent" value="false"/>-->
        <!--<property name="arguments" value="0" />-->
        <!--&lt;!&ndash; 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 &ndash;&gt;-->
    <!--</bean>-->


    <!--&lt;!&ndash;  调度触发器 &ndash;&gt;-->
    <!--<bean id="buckleTaskTrigger1"-->
          <!--class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->

        <!--<property name="jobDetail" ref="buckleTaskDetail1"/>-->

        <!--<property name="cronExpression">-->
            <!--&lt;!&ndash;<value>0 0-59/30 7-18 * * ?</value>&ndash;&gt;-->
            <!--<value>0 0 7 * * ?</value>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="buckleTaskDetail2" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
        <!--<property name="targetObject" ref="buckleTask"/>-->
        <!--<property name="targetMethod" value="run"/>-->
        <!--<property name="concurrent" value="false"/>-->
        <!--<property name="arguments" value="1" />-->
        <!--&lt;!&ndash; 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 &ndash;&gt;-->
    <!--</bean>-->


    <!--&lt;!&ndash;  调度触发器 &ndash;&gt;-->
    <!--<bean id="buckleTaskTrigger2"-->
          <!--class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->

        <!--<property name="jobDetail" ref="buckleTaskDetail2"/>-->

        <!--<property name="cronExpression">-->
            <!--&lt;!&ndash;<value>0 0-59/30 7-18 * * ?</value>&ndash;&gt;-->
            <!--<value>0 0 12 * * ?</value>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="buckleTaskDetail3" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
        <!--<property name="targetObject" ref="buckleTask"/>-->
        <!--<property name="targetMethod" value="run"/>-->
        <!--<property name="concurrent" value="false"/>-->
        <!--<property name="arguments" value="2" />-->
        <!--&lt;!&ndash; 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 &ndash;&gt;-->
    <!--</bean>-->


    <!--&lt;!&ndash;  调度触发器 &ndash;&gt;-->
    <!--<bean id="buckleTaskTrigger3"-->
          <!--class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->

        <!--<property name="jobDetail" ref="buckleTaskDetail3"/>-->

        <!--<property name="cronExpression">-->
            <!--&lt;!&ndash;<value>0 0-59/30 7-18 * * ?</value>&ndash;&gt;-->
            <!--<value>0 0 15 * * ?</value>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="buckleTaskDetail4" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
        <!--<property name="targetObject" ref="buckleTask"/>-->
        <!--<property name="targetMethod" value="run"/>-->
        <!--<property name="concurrent" value="false"/>-->
        <!--<property name="arguments" value="3" />-->
        <!--&lt;!&ndash; 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 &ndash;&gt;-->
    <!--</bean>-->


    <!--&lt;!&ndash;  调度触发器 &ndash;&gt;-->
    <!--<bean id="buckleTaskTrigger4"-->
          <!--class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->

        <!--<property name="jobDetail" ref="buckleTaskDetail4"/>-->

        <!--<property name="cronExpression">-->
            <!--&lt;!&ndash;<value>0 0-59/30 7-18 * * ?</value>&ndash;&gt;-->
            <!--<value>0 0 19 * * ?</value>-->
        <!--</property>-->
    <!--</bean>-->

    <!--<bean id="buckleTaskDetail5" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
        <!--<property name="targetObject" ref="buckleTask"/>-->
        <!--<property name="targetMethod" value="run"/>-->
        <!--<property name="concurrent" value="false"/>-->
        <!--<property name="arguments" value="4" />-->
        <!--&lt;!&ndash; 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 &ndash;&gt;-->
    <!--</bean>-->


    <!--&lt;!&ndash;  调度触发器 &ndash;&gt;-->
    <!--<bean id="buckleTaskTrigger5"-->
          <!--class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->

        <!--<property name="jobDetail" ref="buckleTaskDetail5"/>-->

        <!--<property name="cronExpression">-->
            <!--&lt;!&ndash;<value>0 0-59/30 7-18 * * ?</value>&ndash;&gt;-->
            <!--<value>0 0 23 * * ?</value>-->
        <!--</property>-->
    <!--</bean>-->
    <!--&lt;!&ndash;     ****************************************配置强扣跑批时间戳 结束**************************************&ndash;&gt;-->



    <!--&lt;!&ndash;     ****************************************配置提交失败跑批**************************************&ndash;&gt;-->


    <!--<bean id="kzjrTaskDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
        <!--<property name="targetObject" ref="kzjrSubbitAssetTask"/>-->
        <!--<property name="targetMethod" value="run"/>-->
        <!--<property name="concurrent" value="false"/>-->
        <!--&lt;!&ndash; 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 &ndash;&gt;-->
    <!--</bean>-->


    <!--&lt;!&ndash;  调度触发器 &ndash;&gt;-->
    <!--<bean id="kzjrTaskTrigger"-->
          <!--class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->

        <!--<property name="jobDetail" ref="kzjrTaskDetail"/>-->

        <!--<property name="cronExpression">-->
            <!--&lt;!&ndash;<value>0 0-59/30 7-18 * * ?</value>&ndash;&gt;-->
            <!--<value>0 0-59/30 0-23 * * ?</value>-->
        <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash;     ****************************************财务报表跑批**************************************&ndash;&gt;-->


    <!--<bean id="financeReportTaskDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
        <!--<property name="targetObject" ref="financeReportTask"/>-->
        <!--<property name="targetMethod" value="run"/>-->
        <!--<property name="concurrent" value="false"/>-->
        <!--&lt;!&ndash; 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 &ndash;&gt;-->
    <!--</bean>-->


    <!--&lt;!&ndash;  调度触发器 &ndash;&gt;-->
    <!--<bean id="financeReportTaskTrigger"-->
          <!--class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->

        <!--<property name="jobDetail" ref="financeReportTaskDetail"/>-->

        <!--<property name="cronExpression">-->
            <!--&lt;!&ndash;<value>0 0-59/30 7-18 * * ?</value>&ndash;&gt;-->
            <!--<value>0 0 2 * * ?</value>-->
        <!--</property>-->
    <!--</bean>-->


    <!--&lt;!&ndash;     ****************************************逾期发送短信跑批**************************************&ndash;&gt;-->


    <!--<bean id="sendSmsTaskDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
        <!--<property name="targetObject" ref="sendSmsTask"/>-->
        <!--<property name="targetMethod" value="run"/>-->
        <!--<property name="concurrent" value="false"/>-->
        <!--&lt;!&ndash; 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 &ndash;&gt;-->
    <!--</bean>-->


    <!--&lt;!&ndash;  调度触发器 &ndash;&gt;-->
    <!--<bean id="sendSmsTaskTrigger"-->
          <!--class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->

        <!--<property name="jobDetail" ref="sendSmsTaskDetail"/>-->

        <!--<property name="cronExpression">-->
            <!--&lt;!&ndash;<value>0 0-59/30 7-18 * * ?</value>&ndash;&gt;-->
            <!--<value>0 0 10 * * ?</value>-->
        <!--</property>-->
    <!--</bean>-->




    <!--&lt;!&ndash;     ****************************************产生excel文件**************************************&ndash;&gt;-->


    <!--<bean id="cuimiTaskDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
        <!--<property name="targetObject" ref="cuimiTask"/>-->
        <!--<property name="targetMethod" value="run"/>-->
        <!--<property name="concurrent" value="false"/>-->
        <!--&lt;!&ndash; 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 &ndash;&gt;-->
    <!--</bean>-->


    <!--&lt;!&ndash;  调度触发器 &ndash;&gt;-->
    <!--<bean id="cuimiTaskTrigger"-->
          <!--class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->

        <!--<property name="jobDetail" ref="cuimiTaskDetail"/>-->

        <!--<property name="cronExpression">-->
            <!--&lt;!&ndash;<value>0 0-59/30 7-18 * * ?</value>&ndash;&gt;-->
            <!--<value>0 40 1 * * ?</value>-->
        <!--</property>-->
    <!--</bean>-->


    <!--&lt;!&ndash;     ****************************************发送excel**************************************&ndash;&gt;-->


    <!--<bean id="sendExcelTaskDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
        <!--<property name="targetObject" ref="sendExcelTask"/>-->
        <!--<property name="targetMethod" value="run"/>-->
        <!--<property name="concurrent" value="false"/>-->
        <!--&lt;!&ndash; 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 &ndash;&gt;-->
    <!--</bean>-->


    <!--&lt;!&ndash;  调度触发器 &ndash;&gt;-->
    <!--<bean id="sendExcelTaskTrigger"-->
          <!--class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->

        <!--<property name="jobDetail" ref="sendExcelTaskDetail"/>-->

        <!--<property name="cronExpression">-->
            <!--&lt;!&ndash;<value>0 0-59/30 7-18 * * ?</value>&ndash;&gt;-->
            <!--<value>0 50 9 * * ?</value>-->
        <!--</property>-->
    <!--</bean>-->

    <!--&lt;!&ndash;     ****************************************放款失败订单修改订单状态**************************************&ndash;&gt;-->

    <!--<bean id="updateRemitFailOrder" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">-->
        <!--<property name="targetObject" ref="orderFailTask"/>-->
        <!--<property name="targetMethod" value="run"/>-->
        <!--<property name="concurrent" value="false"/>-->
        <!--&lt;!&ndash; 是否允许任务并发执行。当值为false时，表示必须等到前一个线程处理完毕后才再启一个新的线程 &ndash;&gt;-->
    <!--</bean>-->


    <!--&lt;!&ndash;  调度触发器 &ndash;&gt;-->
    <!--<bean id="updateRemitFailOrderTrigger"-->
          <!--class="org.springframework.scheduling.quartz.CronTriggerFactoryBean">-->

        <!--<property name="jobDetail" ref="updateRemitFailOrder"/>-->

        <!--<property name="cronExpression">-->
            <!--&lt;!&ndash;<value>0 0-59/30 7-18 * * ?</value>&ndash;&gt;-->
            <!--<value>0 0 3 * * ?</value>-->
        <!--</property>-->
    <!--</bean>-->

</beans>