<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/aop  
                        http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

    <context:annotation-config/>
    <!-- 默认扫描的包路径 -->
    <context:component-scan base-package="com.tasfe.framework.crud,com.nyd.admin.dao"/>

    <!-- ASPECTJ注解 proxy-target-class="true" -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- 数据源 -->
    <bean id="financeDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${mysql.driver}"/>
        <property name="url" value="${finance.mysql.url}"/>
        <property name="username" value="${finance.mysql.username}"/>
        <property name="password" value="${finance.mysql.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}"></property>
        <property name="validationQuery" value="SELECT 1" />
        <property name="testOnBorrow" value="true"/>
    </bean>

    <!-- 数据源 -->
    <bean id="adminDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${mysql.driver}"/>
        <property name="url" value="${admin.mysql.url}"/>
        <property name="username" value="${admin.mysql.username}"/>
        <property name="password" value="${admin.mysql.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}"></property>
        <property name="validationQuery" value="SELECT 1" />
        <property name="testOnBorrow" value="true"/>
    </bean>

    <!-- 数据源 -->
    <bean id="zeusDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${mysql.driver}"/>
        <property name="url" value="${zeus.mysql.url}"/>
        <property name="username" value="${zeus.mysql.username}"/>
        <property name="password" value="${zeus.mysql.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}"></property>
        <property name="validationQuery" value="SELECT 1" />
        <property name="testOnBorrow" value="true"/>
    </bean>
    <!-- 数据源 -->
    <bean id="msgDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${mysql.driver}"/>
        <property name="url" value="${msg.mysql.url}"/>
        <property name="username" value="${msg.mysql.username}"/>
        <property name="password" value="${msg.mysql.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}"></property>
        <property name="validationQuery" value="SELECT 1" />
        <property name="testOnBorrow" value="true"/>
    </bean>
    <bean id="userDataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${mysql.driver}"/>
        <property name="url" value="${user.mysql.url}"/>
        <property name="username" value="${admin.mysql.username}"/>
        <property name="password" value="${admin.mysql.password}"/>
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="${initialSize}"></property>
        <!-- 连接池最大数量 -->
        <property name="maxActive" value="${maxActive}"></property>
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="${maxIdle}"></property>
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="${minIdle}"></property>
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="${maxWait}"></property>
        <property name="validationQuery" value="SELECT 1" />
        <property name="testOnBorrow" value="true"/>
    </bean>


    <bean id="dataSource" class="com.nyd.admin.dao.ds.DynamicDataSource">
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="financeDataSource" value-ref="financeDataSource"/>
                <entry key="zeusDataSource" value-ref="zeusDataSource"/>
                <!--<entry key="financeDataSource" value-ref="financeDataSource"/>-->
                <entry key="adminDataSource" value-ref="adminDataSource"/>
                <entry key="userDataSource" value-ref="userDataSource"/>
                <entry key="msgDataSource" value-ref="msgDataSource"/>
            </map>
        </property>
        <property name="defaultTargetDataSource" ref="financeDataSource"/>
    </bean>

    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
  <!--  <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        &lt;!&ndash; 扫描mybatis配置文件 &ndash;&gt;
        <property name="configLocation" value="classpath:com/nyd/admin/configs/dao/xml/mybatis-config.xml"/>
        &lt;!&ndash; 自动扫描mapping.xml文件,这里可增加自定的mapper.xml文件 &ndash;&gt;
        &lt;!&ndash;<property name="mapperLocations" value="com/nyd/product/configs/dao/xml/mybatis/mapper/ProductFundRelMapper.xml"/>&ndash;&gt;
       &lt;!&ndash; <property name="mapperLocations" value="mappper/UserMapper.xml"/>&ndash;&gt;
    </bean>-->

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:com/nyd/admin/configs/dao/xml/mybatis-config.xml"/>
        <property name="mapperLocations">
            <array>
                <value>com/nyd/admin/configs/dao/mappers/BillWsmMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/ChargebackWsmMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/ReconResultMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/TFundMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/TransformReportMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/BusinessReportMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/FailReportMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/ProductMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/ProductOverdueFeeItemMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/KzjrProductConfigMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/RemitReportMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/RepayReportMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/ResourceRatioMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/FundInfoMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/FundDetailMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/UserMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/CollectionUserMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/PowerMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/RolePowerRelMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/UserRoleRelMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/RoleMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/CustomerHandleQueryMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/ReturnPremiumMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/AccountMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/CreditMapper.xml</value>
                 <value>com/nyd/admin/configs/dao/mappers/DldTwoLoanDataMapper.xml</value>                
                 <value>com/nyd/admin/configs/dao/mappers/RefundMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/SalesPlatformMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/AdminRefundMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/RefundUserMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/RefundOrderMapper.xml</value>
                <value>com/nyd/admin/configs/dao/mappers/AdminRefundAmountMapper.xml</value>
                 <value>com/nyd/admin/configs/dao/mappers/JiGuangPushMapper.xml</value>
            </array>
        </property>

    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.tasfe.framework.crud.dao,com.nyd.admin.dao.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

</beans>