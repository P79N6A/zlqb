<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nyd.order.dao.mapper.THelibaoRecordMapper" > 

	<!-- Result Map-->
	<resultMap id="BaseResultMap" type="com.nyd.order.model.THelibaoRecord" >
			<result column="id" property="id"/>
			<result column="order_no" property="orderNo"/>
			<result column="status" property="status"/>
			<result column="user_id" property="userId"/>
			<result column="user_number" property="userNumber"/>
			<result column="create_time" property="createTime"/>
			<result column="update_time" property="updateTime"/>
			<result column="fail_count" property="failCount"/>
		</resultMap>
	       
	<!-- t_helibao_record table all fields -->
	<sql id="Base_Column_List" >
		 id,order_no,status,user_number,create_time,update_time,fail_count,user_id
	</sql>
	   
	<!-- 查询条件 -->
	<sql id="where_Clause">
	where 1=1
	<trim  suffixOverrides="," >
				 		<if test="id != null and id != ''" >
		    and id =  #{id}
		</if>
				 		<if test="orderNo != null and orderNo != ''" >
		    and order_no =  #{orderNo}
		</if>
				<if test="status != null" >
		    and status =  #{status}
		</if>
				 		<if test="userNumber != null and userNumber != ''" >
		    and user_number =  #{userNumber}
		</if>
				<if test="createTime != null" >
		    and create_time =  #{createTime}
		</if>
				<if test="updateTime != null" >
		    and update_time =  #{updateTime}
		</if>
				<if test="failCount != null" >
		    and fail_count =  #{failCount}
		</if>
		</trim>
	</sql>
	
	<!-- 插入合利宝资质认证表 -->
	<insert id="insert" parameterType="com.nyd.order.model.THelibaoRecord" >
	  insert into t_helibao_record(id,order_no,status,user_number,create_time,update_time,fail_count)
 values(#{id},#{orderNo},#{status},#{userNumber},#{createTime},#{updateTime},#{failCount})
	</insert>
	
	<!-- 修改合利宝资质认证表-->  
	 <update id="update" parameterType="com.nyd.order.model.THelibaoRecord" >
	  update t_helibao_record set order_no=#{orderNo},status=#{status},user_number=#{userNumber},create_time=#{createTime},update_time=#{updateTime},fail_count=#{failCount} where id=#{id}
	 </update>
	 
	 <!-- 选择修改合利宝资质认证表-->
	<update id="updateBySelective" parameterType="com.nyd.order.model.THelibaoRecord" >
		update t_helibao_record set 
	<trim  suffixOverrides="," >
	<if test="orderNo != null  and orderNo != '' ">
		order_no=#{orderNo},
	</if>
	<if test="status != null  ">
		status=#{status},
	</if>
	<if test="userNumber != null  and userNumber != '' ">
		user_number=#{userNumber},
	</if>
	<if test="createTime != null  ">
		create_time=#{createTime},
	</if>
	<if test="updateTime != null  ">
		update_time=#{updateTime},
	</if>
	<if test="failCount != null  ">
		fail_count=#{failCount},
	</if>
	</trim> where id=#{id}
	</update>
	
	
	<!-- 删除合利宝资质认证表 -->
	<update id="delete" parameterType="Object">
		delete 	 from t_helibao_record where id = #{id}
	</update>
	
	<!-- 批量删除合利宝资质认证表 -->
	<delete id="batchDelete" parameterType="Object">
		delete 	 from t_helibao_record where id in 
		<foreach collection="array" index="index" item="item" open="(" separator="," close=")">  
	       	#{item}  
	   	</foreach> 
	</delete>
	 
	<!-- 依据主键查找合利宝资质认证表 -->
	<select id="selectById" resultMap="BaseResultMap" >
		select <include refid="Base_Column_List" /> 
	 from t_helibao_record where id = #{id}
	</select>
	  	
	<!-- 合利宝资质认证表 列表总数  为分页组件使用-->
	<select id="pageTotalRecord" resultType="java.lang.Long" parameterType="com.nyd.order.model.form.THelibaoRecordSearchForm">
		select count(1) from t_helibao_record 
		<include refid="where_Clause"/>
	</select>
	  	
	<!-- 分页中的合利宝资质认证表集合，为分页组件使用 -->
	<select id="pageData" resultMap="BaseResultMap" parameterType="com.nyd.order.model.form.THelibaoRecordSearchForm">
		select 
		<include refid="Base_Column_List"/>
		from t_helibao_record 
		<include refid="where_Clause"/>
		<if test="orderCondition != null and orderCondition != ''" >
	      ${orderCondition}
	    </if>
	    ${queryCondition}
	</select>
	
	<!--依据条件统计 合利宝资质认证表总数-->
	<select id="count" resultType="java.lang.Long" parameterType="com.nyd.order.model.form.THelibaoRecordSearchForm">
		select count(1) from t_helibao_record 
		<include refid="where_Clause"/>
	</select>

	
  	<!-- 根据用户ID 查询 数据-->
	<select id="getEntityByUserId" resultMap="BaseResultMap" resultType="java.lang.String" >
		select <include refid="Base_Column_List" /> 
	 from t_helibao_record where user_id = #{userId}
	</select>
	
	<!-- 插入 -->
	<insert id="insertOrderRecord" parameterType="com.nyd.order.model.THelibaoRecord" >
	INSERT INTO t_helibao_record
	 (`id`, `order_no`, `status`, `user_number`, `create_time`, `update_time`, `fail_count`, `user_id`) 
	 VALUES
	  (#{id}, #{orderNo}, #{status}, #{userNumber}, #{createTime}, null, #{failCount}, #{userId});
	</insert>
	
	<!-- 插入 -->
	<insert id="insertOrderLoanRecord" parameterType="com.nyd.order.model.THeLiBaoLoanRecord" >
	INSERT INTO t_order_loan_record (`id`, `seq_no`, `order_no`, `create_time`, `update_time`, `status`, `remark`, `type`, `sys_user_id`, `user_no`) 
	VALUES (#{id}, #{seqNo}, #{orderNo}, #{createTime},#{updateTime}, #{status}, #{remark},#{type},#{sysUserId},#{userId})
	</insert>
	<!-- 查询 -->
	<select id="getOrderLoanRecord" parameterType="java.lang.String"  resultType="com.nyd.order.model.THeLiBaoLoanRecord">
	    select id as id,
		seq_no as seqNo,
		order_no as orderNo,
		create_time as createTime,
		update_time as updateTime,
		status as status,
		remark as remark,
		type as type,
		sys_user_id as sysUserId,
		user_no as userNo
 		from t_order_loan_record
	 where order_no=#{orderNo}
	</select>
	<select id="getOrderCashOut" resultType="com.nyd.order.model.OrderCashOut">
		select 
		id as id,
		IFNULL(real_loan_amount,0)  as realLoanAmount,
		borrow_time  as borrowTime,
		IFNULL(manager_fee,0) as managerFee,
		interest as interest
		from t_order
		where order_no = #{orderId}	 
	</select>

  	<select id="findByUserId" resultType="com.nyd.order.model.THelibaoRecord" >
		select <include refid="Base_Column_List" /> 
	 from t_helibao_record where user_id = #{userId} limit 1
	</select>
	
	<select id="getallUncertifiedOrder" resultMap="BaseResultMap">
	select <include refid="Base_Column_List" /> 
	 from t_helibao_record where status not in ("4","5")
	</select>
	
		<update id="changeStatusByCustId" parameterType="com.nyd.order.model.THelibaoRecord" >
		update t_helibao_record set 
	<trim  suffixOverrides="," >
	<if test="orderNo != null  and orderNo != '' ">
		order_no=#{orderNo},
	</if>
	<if test="status != null  ">
		status=#{status},
	</if>
	<if test="userNumber != null  and userNumber != '' ">
		user_number=#{userNumber},
	</if>
	<if test="createTime != null  ">
		create_time=#{createTime},
	</if>
	<if test="updateTime != null  ">
		update_time=#{updateTime},
	</if>
	<if test="failCount != null  ">
		fail_count=#{failCount},
	</if>
	</trim> where user_id=#{userId}
	</update>
	
	<select id="getallSuccessOrder" resultMap="BaseResultMap">
	select <include refid="Base_Column_List" /> 
	 from t_helibao_record where status  in ("4")
	</select>
	
	<update id="updateOrderStatus" parameterType="java.lang.String" >
	update t_order set  
	order_status = 30 ,
    update_time = NOW() WHERE
	order_no = #{orderId};
	</update>
</mapper>   
