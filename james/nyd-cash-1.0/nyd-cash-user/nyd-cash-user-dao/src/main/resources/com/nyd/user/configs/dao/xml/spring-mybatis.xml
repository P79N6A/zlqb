<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context    
                        http://www.springframework.org/schema/context/spring-context.xsd
                        http://www.springframework.org/schema/aop  
                        http://www.springframework.org/schema/aop/spring-aop.xsd
                        http://www.springframework.org/schema/tx
                        http://www.springframework.org/schema/tx/spring-tx-2.0.xsd">

    <context:annotation-config/>
    <!-- 默认扫描的包路径 -->
    <context:component-scan base-package="com.tasfe.framework.crud,com.nyd.user.dao"/>

    <!-- ASPECTJ注解 proxy-target-class="true" -->

    <!-- 数据源 druid -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="driverClassName" value="${mysql.driver}"/>
        <property name="url" value="${mysql.url}"/>
        <property name="username" value="${mysql.username}"/>
        <property name="password" value="${mysql.password}"/>

        <!-- 超时时间；单位为秒。180秒=3分钟 -->
        <property name="removeAbandonedTimeout" value="${jdbc.pool.removeAbandonedTimeout}"/>
        <property name="maxActive" value="${jdbc.pool.maxPoolSize}"/>
        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="${jdbc.pool.maxWait}"/>
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="${jdbc.pool.timeBetweenEvictionRunsMillis}"/>
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="${jdbc.pool.minEvictableIdleTimeMillis}"/>
        <property name="validationQuery" value="${jdbc.pool.validationQuery} "/>
        <property name="testWhileIdle" value="true"/>
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="false"/>
        <!-- 超过时间限制是否回收 -->
        <property name="removeAbandoned" value="true"/>
    </bean>

    <!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 扫描mybatis配置文件 -->
        <property name="configLocation"
                  value="classpath:com/nyd/user/configs/dao/xml/mybatis/mybatis-config.xml"/>
        <!-- 自动扫描mapping.xml文件,这里可增加自定的mapper.xml文件 -->
        <property name="mapperLocations">
            <array>
                <value>com/nyd/user/configs/dao/xml/mybatis/mappers/ContactMapper.xml</value>
                <value>com/nyd/user/configs/dao/xml/mybatis/mappers/AccountMapper.xml</value>
                <value>com/nyd/user/configs/dao/xml/mybatis/mappers/DownloadMapper.xml</value>
                <value>com/nyd/user/configs/dao/xml/mybatis/mappers/UserSourceMapper.xml</value>
                <value>com/nyd/user/configs/dao/xml/mybatis/mappers/LoginLogMapper.xml</value>
                <value>com/nyd/user/configs/dao/xml/mybatis/mappers/HitLibraryUserMapper.xml</value>
                <value>com/nyd/user/configs/dao/xml/mybatis/mappers/UserJxMapper.xml</value>
                <value>com/nyd/user/configs/dao/xml/mybatis/mappers/UserBindMapper.xml</value>
                <value>com/nyd/user/configs/dao/xml/mybatis/mappers/UserTargetMapper.xml</value>
                <value>com/nyd/user/configs/dao/xml/mybatis/mappers/HitRuleConfigMapper.xml</value>
                <value>com/nyd/user/configs/dao/xml/mybatis/mappers/RefundApplyMapper.xml</value>
                <value>com/nyd/user/configs/dao/xml/mybatis/mappers/HitLogMapper.xml</value>
           	    <value>com/nyd/user/configs/dao/xml/mybatis/mappers/UserStepMapper.xml</value>            
           	    <value>com/nyd/user/configs/dao/xml/mybatis/mappers/RefundAmountMapper.xml</value>            
           	    <value>com/nyd/user/configs/dao/xml/mybatis/mappers/RefundAppCountMapper.xml</value> 
           	    <value>com/nyd/user/configs/dao/xml/mybatis/mappers/RefundUserMapper.xml</value>
           	    <value>com/nyd/user/configs/dao/xml/mybatis/mappers/RefundAppMapper.xml</value>  
           	    <value>com/nyd/user/configs/dao/xml/mybatis/mappers/RefundMapper.xml</value>           	           
           	    <value>com/nyd/user/configs/dao/xml/mybatis/mappers/RefundOrderMapper.xml</value>           	           
           	    <value>com/nyd/user/configs/dao/xml/mybatis/mappers/AccountResetMapper.xml</value>           	           
           	    <value>com/nyd/user/configs/dao/xml/mybatis/mappers/GeetestConfigMapper.xml</value>
            </array>
        </property>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.tasfe.framework.crud.dao,com.nyd.user.dao.mapper"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
    </bean>

    <!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

</beans>