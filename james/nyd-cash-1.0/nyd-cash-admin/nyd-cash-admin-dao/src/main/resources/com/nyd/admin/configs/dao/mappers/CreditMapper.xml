<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nyd.admin.dao.mapper.CreditMapper">

    <!--授信查询-->
    <select id="findCreditDetails" parameterType="com.nyd.admin.model.dto.CreditDto" resultType="com.nyd.admin.model.Info.CreditInfo">
        SELECT
            c.user_id,
            a.account_number,
            b.app_name_code,
            b.app_name_value as appName,
            c.create_time,
            a.os,
            c.last_active_time
        FROM
            xxd_user.t_user_source a
        LEFT JOIN xxd_msg.app_name_config b ON a.app_name = b.app_name_code
        LEFT JOIN xxd_user.t_account c ON a.account_number = c.account_number
        WHERE a.delete_flag = '0'
        AND c.delete_flag = '0'
        <if test="accountNumber != null and accountNumber != ''">
            AND c.account_number = #{accountNumber}
        </if>
        <if test="os != null and os != ''">
            AND a.os = #{os}
        </if>
        <if test="appCode != null and appCode != ''">
            AND b.app_name_code = #{appCode}
        </if>
        <if test="createBeginTime != null and createBeginTime != ''">
            AND c.create_time <![CDATA[ > ]]> #{createBeginTime}
        </if>
        <if test="createEndTime != null and createEndTime != ''">
            AND c.create_time <![CDATA[ < ]]> #{createEndTime}
        </if>
        AND c.account_number NOT IN (
            SELECT account_number
            FROM xxd_user.t_login_log
        )
        ORDER BY c.create_time ASC
    </select>

    <!--授信查询个数-->
    <select id="findCount" parameterType="com.nyd.admin.model.dto.CreditDto" resultType="Integer">
        SELECT
            COUNT(0)
        FROM
            xxd_user.t_user_source a
        LEFT JOIN xxd_msg.app_name_config b ON a.app_name = b.app_name_code
        LEFT JOIN xxd_user.t_account c ON a.account_number = c.account_number
        WHERE a.delete_flag = '0'
        AND c.delete_flag = '0'
        <if test="accountNumber != null and accountNumber != ''">
            AND c.account_number = #{accountNumber}
        </if>
        <if test="os != null and os != ''">
            AND a.os = #{os}
        </if>
        <if test="appCode != null and appCode != ''">
            AND b.app_name_code = #{appCode}
        </if>
        <if test="createBeginTime != null and createBeginTime != ''">
            AND c.create_time <![CDATA[ > ]]> #{createBeginTime}
        </if>
        <if test="createEndTime != null and createEndTime != ''">
            AND c.create_time <![CDATA[ < ]]> #{createEndTime}
        </if>
        AND c.account_number NOT IN (
            SELECT account_number
            FROM xxd_user.t_login_log
        )
    </select>

    <!--查询用户姓名和性别-->
    <select id="findRealNameAndGender" parameterType="java.util.HashMap" resultType="com.nyd.admin.model.Info.UserInfo">
        SELECT t.real_name,t.gender
        FROM xxd_user.t_user t
        WHERE t.delete_flag = '0'
        AND t.user_id = #{userId}
    </select>

    <!--查询操作-->
    <select id="findRemark" parameterType="java.util.HashMap" resultType="String">
        SELECT t.remark
        FROM xxd_admin.t_credit_log t
        WHERE t.delete_flag = '0'
        AND t.account_number = #{accountNumber}
    </select>

    <!--更改remark-->
    <update id="updateCreditRemark" parameterType="com.nyd.admin.model.dto.CreditRemarkDto">
        UPDATE xxd_admin.t_credit_log t
        SET
            t.remark = #{remark},
            t.operator_person = #{operatorPerson},
            t.update_time = now()
        WHERE t.account_number = #{accountNumber}
    </update>

    <!--新增一条记录-->
    <insert id="insertCreditLog" parameterType="com.nyd.admin.model.dto.CreditRemarkDto">
        INSERT INTO xxd_admin.t_credit_log (
            user_id,
            account_number,
            app_name,
            os,
            operator_person,
            remark,
            count,
            delete_flag,
            create_time,
            update_time,
            update_by)
        VALUES (
            #{userId},
            #{accountNumber},
            #{appName},
            #{os},
            #{operatorPerson},
            #{remark},
            '0',
            '0',
            now(),
            now(),
            'sys')
    </insert>
</mapper>