<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nyd.msg.dao.mapper.SendSmsLogMapper">

    <resultMap id="BaseResultMap" type="com.nyd.msg.entity.SendSmsLog">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="request" jdbcType="VARCHAR" property="request" />
        <result column="response" jdbcType="VARCHAR" property="response" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="channel" jdbcType="INTEGER" property="channel" />
        <result column="msg_code" jdbcType="VARCHAR" property="msgCode" />
        <result column="msg_id" jdbcType="VARCHAR" property="msgId" />
    </resultMap>

    <sql id="Base_Column_List">
        id, create_time, request, response, phone, channel, msg_code, msg_id
    </sql>

    <sql id="Base_Where_Clause">
        <where>
            <if test="createTime != null">
                and create_time = #{createTime,jdbcType=TIMESTAMP}
            </if>
            <if test="request != null">
                and request = #{request,jdbcType=VARCHAR}
            </if>
            <if test="response != null">
                and response = #{response,jdbcType=VARCHAR}
            </if>
            <if test="phone != null">
                and phone = #{phone,jdbcType=VARCHAR}
            </if>
            <if test="channel != null">
                and channel = #{channel,jdbcType=INTEGER}
            </if>
            <if test="msgCode != null">
                and msg_code = #{msgCode,jdbcType=VARCHAR}
            </if>
            <if test="msgId != null">
                and msg_id = #{msgId,jdbcType=VARCHAR}
            </if>
        </where>
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from send_sms_log
        where id = #{id,jdbcType=BIGINT}
    </select>

    <select id="selectByCondistion" resultMap="BaseResultMap">
        select id, create_time, request, response, phone, channel, msg_code, msg_id
        from send_sms_log
        <include refid="Base_Where_Clause" />
    </select>

    <insert id="insert" parameterType="com.nyd.msg.entity.SendSmsLog">
        insert into send_sms_log (id, create_time, request,
        response, phone, channel,
        msg_code, msg_id)
        values (#{id,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{request,jdbcType=VARCHAR},
        #{response,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{channel,jdbcType=INTEGER},
        #{msgCode,jdbcType=VARCHAR}, #{msgId,jdbcType=VARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.nyd.msg.entity.SendSmsLog">
        insert into send_sms_log
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
            <if test="request != null">
                request,
            </if>
            <if test="response != null">
                response,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="channel != null">
                channel,
            </if>
            <if test="msgCode != null">
                msg_code,
            </if>
            <if test="msgId != null">
                msg_id,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="request != null">
                #{request,jdbcType=VARCHAR},
            </if>
            <if test="response != null">
                #{response,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="channel != null">
                #{channel,jdbcType=INTEGER},
            </if>
            <if test="msgCode != null">
                #{msgCode,jdbcType=VARCHAR},
            </if>
            <if test="msgId != null">
                #{msgId,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateByPrimaryKeySelective" parameterType="com.nyd.msg.entity.SendSmsLog">
        update send_sms_log
        <set>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="request != null">
                request = #{request,jdbcType=VARCHAR},
            </if>
            <if test="response != null">
                response = #{response,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="channel != null">
                channel = #{channel,jdbcType=INTEGER},
            </if>
            <if test="msgCode != null">
                msg_code = #{msgCode,jdbcType=VARCHAR},
            </if>
            <if test="msgId != null">
                msg_id = #{msgId,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.nyd.msg.entity.SendSmsLog">
        update send_sms_log
        set create_time = #{createTime,jdbcType=TIMESTAMP},
        request = #{request,jdbcType=VARCHAR},
        response = #{response,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        channel = #{channel,jdbcType=INTEGER},
        msg_code = #{msgCode,jdbcType=VARCHAR},
        msg_id = #{msgId,jdbcType=VARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from send_sms_log
        where id = #{id,jdbcType=BIGINT}
    </delete>
</mapper>